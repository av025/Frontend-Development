* {
  background-color: #111;
  color: #fff;
  box-sizing: border-box;
  font-family: cursive;
  text-transform: capitalize;
}

h1 {
  padding: 15px;
}

p {
  padding-left: 60px;
  font-size: 22px;
}

h2 {
  font-style: italic;
  padding-left: 30px;
}

h3 {
  text-align: center;
}

span {
  color: #f23f39;
}

.max-min-content {
  background-color: forestgreen;
  padding: 15px;
  font-size: 18px;
  width: 600px;
  /* width: max-content; */
  /*! max-content width property was will align our maximum  content horizontally in one line as max-content so it overflows our content also on viewport. */
  width: min-content;
  /** min-width will align our html content vertically and takes minimum width it depends on length of our word in content if the word has largest legth than width was equal to that word.  */
}

.div-parent {
  width: 80%;
  height: 600px;
  padding: 20px;
  background-color: coral;
  margin: auto;
  /*! To use flexbox we have to give display:flex */
  display: flex;
  /** When we give display flex than all our html element was horiziontally align as default and all the children of flex-container become display block. */
}

/*! This all below are flex-container children which was also called flex-items. */

.child-one {
  font-size: 18px;
  width: 150px;
  height: 150px;
  background-color: orange;
  padding: 10px;
  border: 4px solid deeppink;
}

.child-two {
  font-size: 18px;
  width: 150px;
  height: 150px;
  background-color: crimson;
  padding: 10px;
  border: 4px solid skyblue;
}

.child-three {
  font-size: 18px;
  width: 150px;
  height: 150px;
  background-color: darkorchid;
  padding: 10px;
  border: 4px solid orangered;
}

.span-one {
  font-size: 18px;
  padding: 10px;
  background-color: chocolate;
  border: 4px solid #f23f39;
  height: 150px;
  width: 150px;
  color: #fff;
}

.span-two {
  font-size: 18px;
  padding: 10px;
  background-color: fuchsia;
  border: 4px solid #699615;
  color: #fff;
  height: 150px;
  width: 150px;
}
