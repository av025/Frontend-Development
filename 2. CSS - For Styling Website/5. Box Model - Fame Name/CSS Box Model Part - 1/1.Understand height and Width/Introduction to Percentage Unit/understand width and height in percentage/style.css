body {
  color: #fff;
  background-color: #111;
  text-transform: capitalize;
}

h1 {
  text-align: center;
}

h2 {
  text-align: center;
}

.parent {
  color: #054b4b;
  background-color: #e440c4;
  /*? Giving width in pixels */
  width: 800px;
  /*! Here we give width in pixels and absolute value to parent element. When we decrease size of  viewport than overflow causes. */
  margin: auto;
}

.child {
  color: #dc143c;
  background-color: #ff7f50;
  /*? Giving width in percentage */
  width: 50%;
  /*! Here we give width in percentage here we give it takes width from parent which have width 800px. Here 50% of 800px was 400px. */
}

.child-element {
  color: #8b008b;
  background-color: #2cdbdb;
  /*? Giving width in percentage */
  width: 50%;
  /*! Here we give width in percentage to child's child element here also we give width 50% so here it was 200px width. */
}

/*? Height Styling */
/*! Here Default  height was 312px if we give height also in percentage it was also takes height from it's parent element  */
/** Here Parent element was body element */
.height-parent {
  color: #6a230a;
  background-color: #e440c4;
  width: 800px;
  margin: auto;
  /*? Giving height in perecentage */
  height: 50%;
  /*! Height was not applied here in percentage because we have to give absolute value to parent element than percentage uint apply to it's childs or descendant */
  height: 600px;
}

.height-child {
  color: crimson;
  background-color: burlywood;
  width: 50%;
  /*? Here also giving height in perecentage */
  height: 50%;
}

.heightChild-childs {
  color: darkred;
  background-color: #6495ed;
  width: 50%;
  /*? Again giving height in percentage */
  height: 50%;
}

/*! On Screen we see that styling was not applied in the case of percentage unit. Height was not applied  */
